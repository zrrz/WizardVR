Version = 1.10.4.31262;
CParticleEffect	$LOCAL$/Resource
{
	EditorInfosPosition = int2(73, 52);
	OnSpawn = "$LOCAL$/Spawner";
	LayerGroups = 
	{
		"$LOCAL$/Idle",
		"$LOCAL$/FlyLoop",
	};
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
	Autostart = true;
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	EditorInfosPosition = int2(-599, -20);
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_D2647564",
		"$LOCAL$/CParticleAttributeDeclaration_E3C7C8AB",
		"$LOCAL$/CParticleAttributeDeclaration_78DF6F4A",
		"$LOCAL$/CParticleAttributeDeclaration_C93F8736",
		"$LOCAL$/CParticleAttributeDeclaration_634F47E0",
	};
	SamplerList = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_8DCBA894",
	};
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	EditorInfosPosition = int2(-162, -81);
	ChildList = 
	{
		"$LOCAL$/FirstFlight",
	};
}
CActionFactoryParticleSpawnerBase	$LOCAL$/FirstFlight
{
	Descriptor = "$LOCAL$/CParticleDescriptor_2EA891C4";
	FluxFactorExpression = "Flux";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_2EA891C4
{
	Renderer = "$LOCAL$/CParticleRenderer_List_2327B75C";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_9242AFE3",
		"$LOCAL$/CParticleFieldDeclaration_0FE83636",
		"$LOCAL$/CParticleFieldDeclaration_9E395631",
		"$LOCAL$/CParticleFieldDeclaration_D40FA848",
		"$LOCAL$/CParticleFieldDeclaration_30861316",
		"$LOCAL$/CParticleFieldDeclaration_19AEBB4F",
		"$LOCAL$/CParticleFieldDeclaration_B2D644BE",
		"$LOCAL$/CParticleFieldDeclaration_2289C359",
		"$LOCAL$/CParticleFieldDeclaration_184C8890",
		"$LOCAL$/CParticleFieldDeclaration_D5938884",
	};
	CustomEvents = 
	{
		"$LOCAL$/CParticleEventDeclaration_EACD6484",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_6FC1F1D7";
	States = 
	{
		"$LOCAL$/CParticleState_98808BA1",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6FC1F1D7
{
	Expression = "function void	Eval()
{
	//\"infinity\" give a infinite life at the particles
	Life = infinity;
	Size = rand(0.05,0.1) * Scale;
	Velocity = vrand() + scene.axisUp();
	Color = rand(RGB - RGBVar * RGB, RGB).xyz1;
	TextureID = ninja * 4;
	WingSpeed = floor(rand(3,5)) * 10;
	Time = rand(5, 100) * 30;
	TargetHeight = FlightHeight;
}
";
}
CParticleState	$LOCAL$/CParticleState_98808BA1
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_62535278",
		"$LOCAL$/Script_1",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_62535278
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -1.0000000e+000, 0.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Turb";
	WorldInteractionMode = OneWay;
	DieOnContact = true;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_9242AFE3
{
	FieldName = "Size";
}
CParticleEvolver_Script	$LOCAL$/Script_1
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_F7CC4AE2";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_F7CC4AE2
{
	Expression = "function void	Eval()
{
	float3	nVel = safe_normalize(Velocity);
	float3	side = safe_normalize(cross(nVel, scene.axisUp()), scene.axisSide(), 1.0e-6);
	float	speed = clamp(length(Velocity), 0.5, 1);
	Velocity = nVel * speed;

	Time -= dt * (speed + 0.5) * WingSpeed;
	float	angle = sin(Time);
	
	AxisR = -rotate(side, nVel, -angle);
	AxisL = -rotate(-side, nVel, angle);
	AxisUpR = -cross(AxisR, nVel);
	AxisUpL = -cross(AxisL, nVel);
	
	int		raycastSelector = rand(0,1) < 0.5;
	float3	rayDir = select(float3(0,-1,0), nVel, raycastSelector);
//	float3	rayDir = select(-scene.axisUp(), nVel, raycastSelector);
	float	targetHeight = TargetHeight;
	float	rayLength = select(targetHeight, 4, raycastSelector);
	float4	raycast = scene.intersect(Position, rayDir, rayLength);
	
	float	hitDist = raycast.w;
	float	castA = (targetHeight * 0.5 - hitDist);
	float	castB = (4 - hitDist);
	int		hasAvoidance = (hitDist != infinity) & (Time > 0);
	float	cast = select(0, select(castA, castB, raycastSelector) * 3, hasAvoidance);

	float3	avoidance = raycast.xyz * cast;
	float3	perturbation = 1 * float3(fast_noise(Time/20 + 100),0,fast_noise(Time/30));
	VelocityField = Turb.sample(Position) + perturbation + avoidance;	
	
	float	offset = Size * 0.5;
	PosR=Position - AxisR * offset;
	PosL=Position - AxisL * offset;
}
";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_8DCBA894
{
	SamplerName = "Turb";
	Wavelength = 1.0000000e+000;
	Strength = 3.5355338e-001;
	Octaves = 1;
	TimeScale = 1.0000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F9795719
{
	FieldName = "AxisUpL";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0FE83636
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_9E395631
{
	FieldName = "VelocityField";
	FieldType = float3;
	TransformFilter = full;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D40FA848
{
	FieldName = "Time";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_E3C7C8AB
{
	AttributeName = "RGB";
	AttributeType = float3;
	DefaultValueF4 = float4(1.0000000e+000, 5.0000000e-001, 1.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_78DF6F4A
{
	AttributeName = "RGBVar";
	AttributeType = float3;
	DefaultValueF4 = float4(5.0000000e-001, 2.5000000e-001, 5.0000000e-001, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleEventDeclaration	$LOCAL$/CParticleEventDeclaration_BC25C750
{
	EventName = "OnCollide";
	EventAction = "$LOCAL$/Idle";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8101997E
{
	FieldName = "AxisUpR";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_6E30A2C2
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_3FD8B7AD";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_30861316
{
	FieldName = "WingSpeed";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_19AEBB4F
{
	FieldName = "AxisR";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_5B3D39FC
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_A2FB226F",
		"$LOCAL$/CParticleRenderer_Billboard_52F92A5E",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_2327B75C
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_06AF3ACB",
		"$LOCAL$/CParticleRenderer_Billboard_6B2CB3F5",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_6E869E89
{
	EditorInfosIsBlockMinimized = 0;
	Expression = "function void	Eval()
{
	Life = rand(1,4);
	Size = parent.Size;
	Dir = scene.axisUp();
	Time = ninja*10;
	Color = parent.Color;
	TextureID = parent.TextureID;
}

function void	PostEval()
{
	float3	incomingDir = parent.Velocity;
	Dir = incomingDir - Dir * dot(Dir, incomingDir);
}";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_3FD8B7AD
{
	Expression = "function void	Eval()
{
	float3	nVel = safe_normalize(Dir);
	float3	side = safe_normalize(cross(nVel, float3(0,1,0)), float3(1,0,0), 1.0e-6);
	float	angle = remap(sin(Time+scene.Time*10), -1, 1, 1, (pi/2)*0.9); // pi/2 * 0.9 : almost completely close the wings
	
	AxisR=-rotate(side, nVel, -angle);
	AxisUpR=-cross(AxisR, nVel);
	
	AxisL=-rotate(-side, nVel, angle);
	AxisUpL=-cross(AxisL, nVel);
	
	float	offset = Size * 0.5;
	PosR = Position - AxisR * offset;
	PosL = Position - AxisL * offset;
}
";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_C93F8736
{
	AttributeName = "Scale";
	DefaultValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_634F47E0
{
	AttributeName = "Flux";
	DefaultValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	MaxValueF4 = float4(1.0000000e+002, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_06AF3ACB
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/Fx/ButterFly_02.dds";
	AtlasDefinition = "Textures/Fx/AtlasX2.pkat";
	BillboardMode = PlanarAlignedQuad;
	PositionField = "PosL";
	AxisField = "AxisL";
	Axis2Field = "AxisUpL";
	AxisScale = 2.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_6B2CB3F5
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/Fx/ButterFly_02.dds";
	AtlasDefinition = "Textures/Fx/AtlasX2.pkat";
	BillboardMode = PlanarAlignedQuad;
	PositionField = "PosR";
	AxisField = "AxisR";
	Axis2Field = "AxisUpR";
	AxisScale = 2.0000000e+000;
}
CParticleEventDeclaration	$LOCAL$/CParticleEventDeclaration_EACD6484
{
	EventName = "OnCollide";
	EventAction = "$LOCAL$/Idle";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_A2FB226F
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/Fx/ButterFly_02.dds";
	AtlasDefinition = "Textures/Fx/AtlasX2.pkat";
	BillboardMode = PlanarAlignedQuad;
	PositionField = "PosL";
	AxisField = "AxisL";
	Axis2Field = "AxisUpL";
	AxisScale = 2.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_52F92A5E
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/Fx/ButterFly_02.dds";
	AtlasDefinition = "Textures/Fx/AtlasX2.pkat";
	BillboardMode = PlanarAlignedQuad;
	PositionField = "PosR";
	AxisField = "AxisR";
	Axis2Field = "AxisUpR";
	AxisScale = 2.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_0B6DC979
{
	FieldName = "Size";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_044D3444
{
	CustomName = "Physics";
	ConstantAcceleration = float3(0.0000000e+000, -1.0000000e+000, 0.0000000e+000);
	Drag = 1.0000000e+000;
	VelocityFieldSampler = "Turb";
	WorldInteractionMode = OneWay;
	DieOnContact = true;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/FlyLoop
{
	Descriptor = "$LOCAL$/CParticleDescriptor_3C68A0AE";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_B52E0415
{
	Renderer = "$LOCAL$/CParticleRenderer_List_5B3D39FC";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_0B6DC979",
		"$LOCAL$/CParticleFieldDeclaration_8522C6F2",
		"$LOCAL$/CParticleFieldDeclaration_AD681024",
		"$LOCAL$/CParticleFieldDeclaration_1178BE7B",
		"$LOCAL$/CParticleFieldDeclaration_EAD5B15A",
		"$LOCAL$/CParticleFieldDeclaration_357D1E25",
		"$LOCAL$/CParticleFieldDeclaration_FE9E554C",
		"$LOCAL$/CParticleFieldDeclaration_F990A64B",
	};
	CustomEvents = 
	{
		"$LOCAL$/CParticleEventDeclaration_D5B02CF8",
	};
	VirtualParentFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_F7540B47",
		"$LOCAL$/CParticleFieldDeclaration_9A1A2D91",
		"$LOCAL$/CParticleFieldDeclaration_5CCC2768",
		"$LOCAL$/CParticleFieldDeclaration_F934BD93",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_6E869E89";
	States = 
	{
		"$LOCAL$/CParticleState_44BFEB80",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2289C359
{
	FieldName = "AxisUpR";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_184C8890
{
	FieldName = "AxisUpL";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleState	$LOCAL$/CParticleState_E026A33D
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_044D3444",
		"$LOCAL$/CParticleEvolver_Script_AE9A0657",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_AD681024
{
	FieldName = "Time";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_AE9A0657
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_F8966866";
}
CParticleEventDeclaration	$LOCAL$/CParticleEventDeclaration_D5B02CF8
{
	EventName = "OnDeath";
	EventAction = "$LOCAL$/FlyLoop";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_F8966866
{
	Expression = "function void	Eval()
{
	float3	nVel = safe_normalize(Velocity);
	float3	side = safe_normalize(cross(nVel, scene.axisUp()), scene.axisSide(), 1.0e-6);
	float	speed = clamp(length(Velocity), 0.5, 1);
	Velocity = nVel * speed;

	Time -= dt * (speed + 0.5) * WingSpeed;
	float	angle = sin(Time);
	
	AxisR = -rotate(side, nVel, -angle);
	AxisL = -rotate(-side, nVel, angle);
	AxisUpR = -cross(AxisR, nVel);
	AxisUpL = -cross(AxisL, nVel);
	
	int		raycastSelector = rand(0,1) < 0.5;
	float3	rayDir = select(float3(0,-1,0), nVel, raycastSelector);
//	float3	rayDir = select(-scene.axisUp(), nVel, raycastSelector);
	float	targetHeight = TargetHeight;
	float	rayLength = select(targetHeight, 4, raycastSelector);
	float4	raycast = scene.intersect(Position, rayDir, rayLength);
	
	float	hitDist = raycast.w;
	float	castA = (targetHeight * 0.5 - hitDist);
	float	castB = (4 - hitDist);
	int		hasAvoidance = (hitDist != infinity) & (Time > 0);
	float	cast = select(0, select(castA, castB, raycastSelector) * 3, hasAvoidance);

	float3	avoidance = raycast.xyz * cast;
	float3	perturbation = 1 * float3(fast_noise(Time/20 + 100),0,fast_noise(Time/30));
	VelocityField = Turb.sample(Position) + perturbation + avoidance;	
	
	float	offset = Size * 0.5;
	PosR=Position - AxisR * offset;
	PosL=Position - AxisL * offset;
}
";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_EE363C12
{
	Expression = "function void	Eval()
{
	Life = infinity;
	Size = parent.Size;
	Velocity = vrand() + scene.axisUp();
	Color = parent.Color;
	WingSpeed = floor(rand(3,5)) * 10;
	TextureID = parent.TextureID;
	Time = rand(5, 100) * 30;
	TargetHeight = FlightHeight;
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_1178BE7B
{
	FieldName = "AxisR";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_EAD5B15A
{
	FieldName = "AxisL";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_357D1E25
{
	FieldName = "AxisUpR";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FE9E554C
{
	FieldName = "AxisUpL";
	FieldType = float3;
	TransformFilter = rotate;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Idle
{
	EditorInfosIsBlockMinimized = 0;
	Descriptor = "$LOCAL$/CParticleDescriptor_B52E0415";
}
CParticleState	$LOCAL$/CParticleState_44BFEB80
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_38273043",
		"$LOCAL$/CParticleEvolver_Script_6E30A2C2",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F7540B47
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D02BEC12
{
	FieldName = "Size";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_9A1A2D91
{
	FieldName = "Size";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8522C6F2
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_B2D644BE
{
	FieldName = "AxisL";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_38273043
{
	CustomName = "Physics";
	DieOnContact = true;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_5CCC2768
{
	FieldName = "Velocity";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F990A64B
{
	FieldName = "Dir";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_3C68A0AE
{
	Renderer = "$LOCAL$/CParticleRenderer_List_734C5609";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_A4DEA442",
		"$LOCAL$/CParticleFieldDeclaration_CD680EC7",
		"$LOCAL$/CParticleFieldDeclaration_66AFE196",
		"$LOCAL$/CParticleFieldDeclaration_875AB511",
		"$LOCAL$/CParticleFieldDeclaration_D523B3B5",
		"$LOCAL$/CParticleFieldDeclaration_45A6D21C",
		"$LOCAL$/CParticleFieldDeclaration_FBFA8D0F",
		"$LOCAL$/CParticleFieldDeclaration_8101997E",
		"$LOCAL$/CParticleFieldDeclaration_F9795719",
		"$LOCAL$/CParticleFieldDeclaration_797F967D",
	};
	CustomEvents = 
	{
		"$LOCAL$/CParticleEventDeclaration_BC25C750",
	};
	VirtualParentFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_FF544053",
		"$LOCAL$/CParticleFieldDeclaration_D02BEC12",
		"$LOCAL$/CParticleFieldDeclaration_C36B9252",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_EE363C12";
	States = 
	{
		"$LOCAL$/CParticleState_E026A33D",
	};
}
CParticleRenderer_List	$LOCAL$/CParticleRenderer_List_734C5609
{
	CustomName = "List";
	Renderers = 
	{
		"$LOCAL$/CParticleRenderer_Billboard_F3143900",
		"$LOCAL$/CParticleRenderer_Billboard_8F42CBC3",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_F3143900
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/Fx/ButterFly_02.dds";
	AtlasDefinition = "Textures/Fx/AtlasX2.pkat";
	BillboardMode = PlanarAlignedQuad;
	PositionField = "PosL";
	AxisField = "AxisL";
	Axis2Field = "AxisUpL";
	AxisScale = 2.0000000e+000;
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_8F42CBC3
{
	CustomName = "Billboard";
	BillboardingMaterial = AlphaBlend;
	Diffuse = "Textures/Fx/ButterFly_02.dds";
	AtlasDefinition = "Textures/Fx/AtlasX2.pkat";
	BillboardMode = PlanarAlignedQuad;
	PositionField = "PosR";
	AxisField = "AxisR";
	Axis2Field = "AxisUpR";
	AxisScale = 2.0000000e+000;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A4DEA442
{
	FieldName = "Size";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FBFA8D0F
{
	FieldName = "AxisL";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_CD680EC7
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_66AFE196
{
	FieldName = "VelocityField";
	FieldType = float3;
	TransformFilter = full;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_875AB511
{
	FieldName = "Time";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D523B3B5
{
	FieldName = "WingSpeed";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_45A6D21C
{
	FieldName = "AxisR";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_FF544053
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_D2647564
{
	AttributeName = "FlightHeight";
	DefaultValueF4 = float4(2.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+001, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_F934BD93
{
	FieldName = "TextureID";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C36B9252
{
	FieldName = "TextureID";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_797F967D
{
	FieldName = "TargetHeight";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D5938884
{
	FieldName = "TargetHeight";
}
